name: Ubuntu

on:  
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ubuntu:
    strategy:
      matrix:
        include:
          - name: "Ubuntu 18.04 + GCC-8"
            os: ubuntu-18.04
            compiler: gcc
            version: "8"
          - name: "Ubuntu 20.04 + GCC-9"
            os: ubuntu-20.04
            compiler: gcc
            version: "9"
          - name: "Ubuntu 18.04 + Clang-9"
            os: ubuntu-18.04
            compiler: clang
            version: "9"
          - name: "Ubuntu 20.04 + Clang-10"
            os: ubuntu-20.04
            compiler: clang
            version: "10"

    runs-on: ${{matrix.os}}
    name: ${{matrix.name}}

    steps:
    - name: Configure Compiler
      run: |
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
        else
          echo "CC=clang-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX=clang++-${{ matrix.version }}" >> $GITHUB_ENV
        fi
    - name: Install Dependencies
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install xorg-dev freeglut3-dev
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install cmake gcc-${{ matrix.version }} g++-${{ matrix.version }}
        else
          sudo apt-get install cmake clang-${{ matrix.version }} clang++-${{ matrix.version }}
        fi

    - uses: actions/checkout@v1
      with:
        repository: cubbyflow/cubbyflow
        submodules: true
        ref: main
    - name: Configure CubbyFlow Install
      run: mkdir build ${GITHUB_WORKSPACE}/install && 
          cd build && export CUBBYFLOW_INSTALL_DIR=${GITHUB_WORKSPACE}/install &&
          cmake .. -DUSE_CUDA=False -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/install -DCMAKE_BUILD_TYPE=Release
      working-directory: ../cubbyflow
    - name: Install CubbyFlow
      run: cd build && cmake --build . --target install --config=Release
      working-directory: ../cubbyflow

    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Configure RenderFlow Build
      run: mkdir build && cd build && cmake .. -DCUBBYFLOW_INSTALL_DIR=${CUBBYFLOW_INSTALL_DIR} -DCMAKE_BUILD_TYPE=Release
    - name: Build RenderFlow
      run: cd build && make
    - name: Run Unit Test
      run: /home/runner/work/RenderFlow/RenderFlow/build/bin/UnitTests